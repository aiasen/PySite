========================
 ccoder.wang api tables
========================

1. 关于URL格式：程序内用下划线‘_’，浏览器端用横线‘-’；

---------------------------------------------------------------------------------------------------------------------------------------------------+
 Blurprint: # main #
---------------------------------------------------------------------------------------------------------------------------------------------------+
	@main.app_errorhandler(403)								forbidden(e)																			没有访问权限
	@main.app_errorhandler(404)								page_not_found(e)
	@main.app_errorhandler(500)								internal_server_error(e)
	@main.after_app_request									after_request(response)																	钩子函数：检测数据库查询缓慢
	
	@main.route('/shutdown')								server_shutdown()																		关闭flask服务
	@main.route('/') [GET,POST]								index() 								--> blog.index()
	
(*) @upload.route('/upload/files') [POST]					upload_files()
	
	
---------------------------------------------------------------------------------------------------------------------------------------------------+
 Blurprint: # auth #
---------------------------------------------------------------------------------------------------------------------------------------------------+
	@auth.before_request									before_request()
	
	@auth.route('/auth/unconfirmed')						unconfirmed()							--> /auth/unconfirmed.html						根据用户登录状态进行页面跳转
	@auth.route('/auth/login') [GET,POST]					login()									--> /auth/login.html							登录页面/登录成功后进行跳转
	@auth.route('/auth/logout')								logout()								--> main.index()								@login_required
	@auth.route('/auth/register') [GET,POST]				register()								--> /auth/register.html							注册页面/提交后跳转到登录页面
	@auth.route('/auth/confirm/<token>')					confirm(token)							--> main.index()								@login_required 注册确认
	@auth.route('/auth/confirm')							resend_confirmation()					--> main.index()								@login_required 重新发送确认链接
	@auth.route('/auth/change-password') [GET,POST]			change_password()						--> /auth/change_password.html					@login_required 重设密码页面/提交
	@auth.route('/auth/reset') [GET,POST]					password_reset_request()				--> /auth/reset_password.html					请求重设密码
	@auth.route('/auth/reset/<token>') [GET,POST]			password_reset(token)					--> /auth/reset_password.html
	@auth.route('/auth/change-email') [GET,POST]			change_email_request()					--> /auth/change_email.html						@login_required
	@auth.route('/auth/change-email/<token>')				change_email(token)						--> main.index()								@login_required
	
	
---------------------------------------------------------------------------------------------------------------------------------------------------+
 Blurprint: # user #
---------------------------------------------------------------------------------------------------------------------------------------------------+
	@user.route('/user/edit') [GET,POST]					edit_profile()							--> /user/edit_profile.html						@login_required
	@user.route('/user/edit/<int:id>') [GET,POST]			edit_profile_admin(id)					--> /user/edit_profile.html						@login_required @admin_required
(*) @user.route('/user/delete/<int:id>')					delete(id)								--> user.list_users()							@login_required @admin_required
	@user.route('/user/follow/<username>')					follow(id)								--> user.user()									@login_required @permission_required(Permission.FOLLOW)
	@user.route('/user/unfollow/<username>')				unfollow(username)						--> user.user()									@login_required @permission_required(Permission.FOLLOW)
	@user.route('/user/followers/<username>')				followers(username)						--> /user/followers.html
	@user.route('/user/followed-by/<username>')				followed_by(username)					--> /user/followers.html
(*) @user_np.route('/u/')									list_users()							--> /user/user_list.html						@login_required @admin_required
	@user_np.route('/u/<username>')							profile(username)						--> /user/user.html
(*) @user.route('/user/upload-avatar') [GET,POST]			upload_avatar()							--> /user/edit_avatar.html						@login_required
(*) @upload.route('/upload/avatar') [GET,POST]				upload_avatar(max_size=256)				上传头像
	
	
---------------------------------------------------------------------------------------------------------------------------------------------------+
 Buleprint: # image, upload #  &  Nginx静态文件服务容器
---------------------------------------------------------------------------------------------------------------------------------------------------+
NGINX:
	URL('/css/xxx')											CSS样式访问服务
	URL('/js/xxx')											JavaScript访问服务
	URL('/avatar/<hash>?size=xxx')							不建议用Nginx代理，因为访问gravatar要翻墙！
	URL('/res/xxx/yyy/...')									资源文件使用Nginx容器，提供静态文件下载
	URL('/page/xxx.html')									静态HTML页面访问服务
FLASK:
(*) @image.route('/img/avatar/<hash>?size=xxx')				avatar(hash)							--> image/png
(*) @image.route('/img/movie/<hash>?w=x&h=y&format=z')		image(category, hash)					--> image/xxx
	
---------------------------------------------------------------------------------------------------------------------------------------------------+
 Blurprint: # blog #
---------------------------------------------------------------------------------------------------------------------------------------------------+
	@blog.route('/blog/') [GET,POST]						index()									--> /blog/index.html							None
	@blog.route('/blog/post/<int:id>') [GET,POST]			post(id)								--> /blog/post.html								None
	@blog.route('/blog/edit/<int:id>') [GET,POST]			edit(id)								--> /blog/edit_post.html						@login_required 编辑博客：作者或者管理员
(*) @blog.route('/blog/delete/<int:id>?redirect=xxx')		delete(id)								--> redirect(xxx)								@login_required 删除自己的评论（管理员可以删除所有博客），然后返回上一页
(*) @blog.route('/blog/delete-comment/<int:id>?redirect=xxx') delete_comment(id)					--> redirect(xxx)								@login_required 删除自己的评论，或者自己博客下的所有评论
	@blog.route('/blog/all')								show_all()								--> blog.index()								@login_required 返回主页，显示所有人的博客
	@blog.route('/blog/followed')							show_followed()							--> blog.index()								@login_required 返回主页，显示关注人的博客
	@blog.route('/blog/moderate')							moderate()								--> /blog/moderate.html							@login_required @permission_required(Permission.MODERATE_COMMENTS)
	@blog.route('/blog/moderate/enable/<int:id>')			moderate_enable()						--> blog.moderate()								@login_required @permission_required(Permission.MODERATE_COMMENTS)
	@blog.route('/blog/moderate/disable/<int:id>')			moderate_disable()						--> blog.moderate()								@login_required @permission_required(Permission.MODERATE_COMMENTS)
	
	
---------------------------------------------------------------------------------------------------------------------------------------------------+
 Blurprint: # movie #
---------------------------------------------------------------------------------------------------------------------------------------------------+
(*) @movie.route('/movie/')									index()									--> /movie/index.html							None
(*) @movie.route('/movie/poster/<int:id>') [GET]			poster(id)								--> /movie/poster.html							None
(*) @movie.route('/movie/new') [GET,POST]					add()									--> /movie/new_poster.html						@login_required
(*) @movie.route('/movie/edit/<int:id>') [GET,POST]			edit(id)								--> /movie/edit_poster.html						@login_required
(*) @movie.route('/movie/delete/<int:id>')					delete(id)								--> movie.index()								
(*) @movie.route('/movie/delete_still/<int:id>')			delete-still(id)						--> movie.poster(current_id)					
(*) @upload.route('/upload/movie-stills') [POST]			upload_movie_stills()


---------------------------------------------------------------------------------------------------------------------------------------------------+
 Templates: # html #
---------------------------------------------------------------------------------------------------------------------------------------------------+
	403.html
	404.html
	500.html
	
	_macros.html			--	分页宏
	_posts.html				--	博客列表
	_comments.html			--	评论列表
	
	base.html				--	<head>, <navbar>, scripts, content(填充page_content！)
	
	index.html				--	page_content: 欢迎信息、MD撰写博客、博客列表、分页
	edit_post.html			--	page_content: 博客编辑框
	edit_profile.html		--	page_content: 
	followers.html			--	page_content: 粉丝列表、分页
	moderate.html			--	page_content: include '_comments.html'、分页
	post.html				--	page_content: include '_posts.html'、评论框、评论列表、分页
	user.html				--	page_content: 用户具体信息展示
	error_page.html			--	page_content: 错误信息展示，code & description


















